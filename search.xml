<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2019.10.24模拟赛赛后总结（不完整）</title>
      <link href="/2019/10/26/2019-10-24%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%8D%E5%AE%8C%E6%95%B4%EF%BC%89/"/>
      <url>/2019/10/26/2019-10-24%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%8D%E5%AE%8C%E6%95%B4%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>本文原创，如果有不到位的地方欢迎通过右下角的按钮私信我！  </p><h1 id="A-Icow-Player"><a href="#A-Icow-Player" class="headerlink" title="A.Icow Player"></a>A.Icow Player</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>被无止境的农活压榨得筋疲力尽后，Farmer John打算用他在MP3播放器市场新买的iCow来听些音乐，放松一下。FJ的iCow里存了N(1 &lt;= N &lt;= 1,000)首曲子，按1..N依次编号。至于曲子播放的顺序，则是按一个Farmer John自己设计的算法来决定：<br>       * 第i首曲子有一个初始权值R_i(1 &lt;= R_i &lt;= 10,000)。<br>       * 当一首曲子播放完毕，接下来播放的将是所有曲子中权值最大的那首（如果有两首或多首曲子的权值相同，那么这些曲子中编号最小的那首会被选中）。<br>       * 一首曲子在播放结束后，它的权值会被平均地分给其他N-1首曲子，它本身的权值清零。<br>       * 如果一首曲子的权值无法被平均分配（也就是说，无法被N-1整除），那么被N-1除的余数部分将会以1为单位，顺次分配给排名靠前的曲子（也就是说，顺序为曲目1、曲目2…依次下去。当然，刚播放过的那首曲子需要被跳过），直到多出的部分被分配完。<br>      在选定的下一首曲子播放完毕后，这个算法再次被执行，调整曲子的权值，并选出再接下来播放的曲目。<br>      请你计算一下，按FJ的算法，最先播放的T(1 &lt;= T &lt;= 1000)首曲子分别是哪些。  </p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第1行: 2个用空格隔开的整数：N 和 T<br>第2..N+1行: 第i+1行为1个整数：R_i</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>第1..T行: 第i行为1个整数，表示iCow播放的第i首曲子</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>3 4<br>10<br>8<br>11  </p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>3<br>1<br>2<br>3  </p><h2 id="题目总结"><a href="#题目总结" class="headerlink" title="题目总结"></a>题目总结</h2><p>这道题拿到之后最先想到的就是模拟，于是我大致把程序拆分成了个部分——输入、播放、分配和输出。其中输入就不再赘述，播放部分每次播放权值最大的一首，所以每次都要找到权值最大的一首歌。在这里我犯了一个非常严重的错误——对所有数据进行排序，而且我担心复杂度过高，于是以n为周期每n次播放排序一次，这也是我后面只得10分的原因。<br>错误部分代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i%n==<span class="number">1</span>)sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);<span class="comment">//每n次播放排序一次 </span></span><br><span class="line">    <span class="keyword">if</span>(i%n==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;a[n].bh&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//防止出现n倍数次循环出现下标为零的情况 </span></span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;a[i%n].bh&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> sum1=a[i%n==<span class="number">0</span>?n:i%n].r/n<span class="number">-1</span>;<span class="comment">//下面是分配部分代码 ，一堆玄学三目运算符 </span></span><br><span class="line">    <span class="keyword">int</span> sum2=a[i%n==<span class="number">0</span>?n:i%n].r%n<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(j==i%n==<span class="number">0</span>?n:i%n)<span class="keyword">continue</span>;</span><br><span class="line">        a[j].r+=sum1;</span><br><span class="line">    &#125;</span><br><span class="line">    s:;</span><br><span class="line">    <span class="keyword">if</span>(sum2&gt;n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==i%n==<span class="number">0</span>?n:i%n)<span class="keyword">continue</span>;</span><br><span class="line">            a[j].r++;</span><br><span class="line">        &#125;</span><br><span class="line">        sum2-=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">goto</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=sum2;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==i%n==<span class="number">0</span>?n:i%n)<span class="keyword">continue</span>;</span><br><span class="line">            a[j].r++;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AC代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">    <span class="keyword">int</span> d;</span><br><span class="line">&#125; a[<span class="number">1005</span>];</span><br><span class="line"><span class="comment">//结构体方便比较权值大小，也方便查找数据的编号；</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,t;</span><br><span class="line">   <span class="keyword">int</span> i,r,max,num,k,id;</span><br><span class="line">   <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;t;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">       <span class="built_in">cin</span>&gt;&gt;a[i].v;</span><br><span class="line">      a[i].d=i;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">      max=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)  <span class="comment">//比较权值的大小</span></span><br><span class="line">          <span class="keyword">if</span>(a[i].v&gt;max)&#123;</span><br><span class="line">             max=a[i].v;</span><br><span class="line">            id=a[i].d;</span><br><span class="line">         &#125;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;id&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//每次输出权值最大的歌曲的编号</span></span><br><span class="line">      num=a[id].v;<span class="comment">//分配部分</span></span><br><span class="line">      k=num/(n<span class="number">-1</span>); <span class="comment">//平分播放了的歌曲的权值；</span></span><br><span class="line">      r=num%(n<span class="number">-1</span>);<span class="comment">//除不尽小数部分化为整数1分给最近的歌曲权值；</span></span><br><span class="line">      a[id].v=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(i!=id)a[i].v+=k;       </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=r; i++)&#123;</span><br><span class="line">         <span class="keyword">if</span>(i==id)</span><br><span class="line">             r++;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">            a[i].v+=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Costume"><a href="#B-Costume" class="headerlink" title="B.Costume"></a>B.Costume</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>万圣节又到了！Farmer John打算带他的奶牛去参加一个化装晚会，但是，FJ只做了一套能容下两头总长不超过S(1 &lt;= S &lt;= 1,000,000)的牛的恐怖服装。FJ养了N(2 &lt;= N &lt;= 20,000)头按1..N顺序编号的奶牛，编号为i的奶牛的长度为L_i(1 &lt;= L_i &lt;= 1,000,000)。如果两头奶牛的总长度不超过S，那么她们就能穿下这套服装。<br> FJ想知道，如果他想选择两头不同的奶牛来穿这套衣服，一共有多少种满足条件的方案。</p><h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p>第1行: 2个用空格隔开的整数：N 和 S<br>第2..N+1行: 第i+1为1个整数：L_i</p><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>第1行: 输出1个整数，表示FJ可选择的所有方案数。注意奶牛顺序不同的两种 方案是被视为相同的。</p><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><p>4 6<br>3<br>5<br>2<br>1</p><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><p>4</p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>【输出说明】 4种选择分别为：奶牛1和奶牛3；奶牛1和奶牛4；奶牛2和奶牛4；奶牛3和奶牛4。</p><h2 id="题目总结-1"><a href="#题目总结-1" class="headerlink" title="题目总结"></a>题目总结</h2><p>看大佬们的都是做的分治，但数据规模只有n&lt;=20,000，所以直接暴力枚举所有可能然后判断可不可以装下就行了<br>AC代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,s,l[<span class="number">20001</span>],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    freopen(<span class="string">"costume.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"costume.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;l[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(l[i]+l[j]&lt;=s)ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
