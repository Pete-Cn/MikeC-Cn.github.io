<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2019.10.24模拟赛赛后总结</title>
    <url>/2019/10/29/2019-10-24%E6%A8%A1%E6%8B%9F%E8%B5%9B%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p><strong>本文原创，如果有不到位的地方欢迎通过右下角的按钮私信我！</strong>  </p>
<h1 id="A-Icow-Player"><a href="#A-Icow-Player" class="headerlink" title="A.Icow Player"></a>A.Icow Player</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>被无止境的农活压榨得筋疲力尽后，Farmer John打算用他在MP3播放器市场新买的iCow来听些音乐，放松一下。FJ的iCow里存了N(1 &lt;= N &lt;= 1,000)首曲子，按1..N依次编号。至于曲子播放的顺序，则是按一个Farmer John自己设计的算法来决定：<br>       * 第i首曲子有一个初始权值R_i(1 &lt;= R_i &lt;= 10,000)。<br>       * 当一首曲子播放完毕，接下来播放的将是所有曲子中权值最大的那首（如果有两首或多首曲子的权值相同，那么这些曲子中编号最小的那首会被选中）。<br>       * 一首曲子在播放结束后，它的权值会被平均地分给其他N-1首曲子，它本身的权值清零。<br>       * 如果一首曲子的权值无法被平均分配（也就是说，无法被N-1整除），那么被N-1除的余数部分将会以1为单位，顺次分配给排名靠前的曲子（也就是说，顺序为曲目1、曲目2…依次下去。当然，刚播放过的那首曲子需要被跳过），直到多出的部分被分配完。<br>      在选定的下一首曲子播放完毕后，这个算法再次被执行，调整曲子的权值，并选出再接下来播放的曲目。<br>      请你计算一下，按FJ的算法，最先播放的T(1 &lt;= T &lt;= 1000)首曲子分别是哪些。  </p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第1行: 2个用空格隔开的整数：N 和 T<br>第2..N+1行: 第i+1行为1个整数：R_i</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>第1..T行: 第i行为1个整数，表示iCow播放的第i首曲子</p>
<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>3 4<br>10<br>8<br>11  </p>
<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>3<br>1<br>2<br>3  </p>
<h2 id="题目总结"><a href="#题目总结" class="headerlink" title="题目总结"></a>题目总结</h2><p>这道题拿到之后最先想到的就是模拟，于是我大致把程序拆分成了个部分——输入、播放、分配和输出。其中输入就不再赘述，播放部分每次播放权值最大的一首，所以每次都要找到权值最大的一首歌。在这里我犯了一个非常严重的错误——对所有数据进行排序，而且我担心复杂度过高，于是以n为周期每n次播放排序一次，这也是我后面只得10分的原因。<br>错误部分代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i%n==<span class="number">1</span>)sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);<span class="comment">//每n次播放排序一次 </span></span><br><span class="line">    <span class="keyword">if</span>(i%n==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;a[n].bh&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//防止出现n倍数次循环出现下标为零的情况 </span></span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;a[i%n].bh&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> sum1=a[i%n==<span class="number">0</span>?n:i%n].r/n<span class="number">-1</span>;<span class="comment">//下面是分配部分代码 ，一堆玄学三目运算符 </span></span><br><span class="line">    <span class="keyword">int</span> sum2=a[i%n==<span class="number">0</span>?n:i%n].r%n<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(j==i%n==<span class="number">0</span>?n:i%n)<span class="keyword">continue</span>;</span><br><span class="line">        a[j].r+=sum1;</span><br><span class="line">    &#125;</span><br><span class="line">    s:;</span><br><span class="line">    <span class="keyword">if</span>(sum2&gt;n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==i%n==<span class="number">0</span>?n:i%n)<span class="keyword">continue</span>;</span><br><span class="line">            a[j].r++;</span><br><span class="line">        &#125;</span><br><span class="line">        sum2-=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">goto</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=sum2;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==i%n==<span class="number">0</span>?n:i%n)<span class="keyword">continue</span>;</span><br><span class="line">            a[j].r++;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>AC代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">    <span class="keyword">int</span> d;</span><br><span class="line">&#125; a[<span class="number">1005</span>];</span><br><span class="line"><span class="comment">//结构体方便比较权值大小，也方便查找数据的编号；</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,t;</span><br><span class="line">   <span class="keyword">int</span> i,r,max,num,k,id;</span><br><span class="line">   <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;t;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">       <span class="built_in">cin</span>&gt;&gt;a[i].v;</span><br><span class="line">      a[i].d=i;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">      max=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)  <span class="comment">//比较权值的大小</span></span><br><span class="line">          <span class="keyword">if</span>(a[i].v&gt;max)&#123;</span><br><span class="line">             max=a[i].v;</span><br><span class="line">            id=a[i].d;</span><br><span class="line">         &#125;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;id&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//每次输出权值最大的歌曲的编号</span></span><br><span class="line">      num=a[id].v;<span class="comment">//分配部分</span></span><br><span class="line">      k=num/(n<span class="number">-1</span>); <span class="comment">//平分播放了的歌曲的权值；</span></span><br><span class="line">      r=num%(n<span class="number">-1</span>);<span class="comment">//除不尽小数部分化为整数1分给最近的歌曲权值；</span></span><br><span class="line">      a[id].v=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(i!=id)a[i].v+=k;       </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=r; i++)&#123;</span><br><span class="line">         <span class="keyword">if</span>(i==id)</span><br><span class="line">             r++;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">            a[i].v+=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B-Costume"><a href="#B-Costume" class="headerlink" title="B.Costume"></a>B.Costume</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>万圣节又到了！Farmer John打算带他的奶牛去参加一个化装晚会，但是，FJ只做了一套能容下两头总长不超过S(1 &lt;= S &lt;= 1,000,000)的牛的恐怖服装。FJ养了N(2 &lt;= N &lt;= 20,000)头按1..N顺序编号的奶牛，编号为i的奶牛的长度为L_i(1 &lt;= L_i &lt;= 1,000,000)。如果两头奶牛的总长度不超过S，那么她们就能穿下这套服装。<br> FJ想知道，如果他想选择两头不同的奶牛来穿这套衣服，一共有多少种满足条件的方案。</p>
<h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p>第1行: 2个用空格隔开的整数：N 和 S<br>第2..N+1行: 第i+1为1个整数：L_i</p>
<h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>第1行: 输出1个整数，表示FJ可选择的所有方案数。注意奶牛顺序不同的两种 方案是被视为相同的。</p>
<h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><p>4 6<br>3<br>5<br>2<br>1</p>
<h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><p>4</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>【输出说明】 4种选择分别为：奶牛1和奶牛3；奶牛1和奶牛4；奶牛2和奶牛4；奶牛3和奶牛4。</p>
<h2 id="题目总结-1"><a href="#题目总结-1" class="headerlink" title="题目总结"></a>题目总结</h2><p>看大佬们的都是做的分治，但数据规模只有n&lt;=20,000，所以直接暴力枚举所有可能然后判断可不可以装下就行了<br>AC代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,s,l[<span class="number">20001</span>],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    freopen(<span class="string">"costume.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"costume.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;l[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(l[i]+l[j]&lt;=s)ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C-Contest"><a href="#C-Contest" class="headerlink" title="C.Contest"></a>C.Contest</h1><h2 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h2><p>FJ的N(1 &lt;= N &lt;= 100)头奶牛们最近参加了场程序设计竞赛:)。在赛场上，奶牛们按1..N依次编号。每头奶牛的编程能力不尽相同，并且没有哪两头奶牛的水平不相上下，也就是说，奶牛们的编程能力有明确的排名。<br>    整个比赛被分成了若干轮，每一轮是两头指定编号的奶牛的对决。如果编号为A的奶牛的编程能力强于编号为B的奶牛(1 &lt;= A &lt;= N; 1 &lt;= B &lt;= N; A != B)，那么她们的对决中，编号为A的奶牛总是能胜出。<br>    FJ想知道奶牛们编程能力的具体排名，于是他找来了奶牛们所有M(1 &lt;= M &lt;= 4,500)轮比赛的结果，希望你能根据这些信息，推断出尽可能多的奶牛的编程能力排名。比赛结果保证不会自相矛盾。</p>
<h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><p>第1行: 2个用空格隔开的整数：N 和 M<br>第2..M+1行: 每行为2个用空格隔开的整数A、B，描述了参加某一轮比赛的奶牛的编号，以及结果（编号为A，即为每行的第一个数的奶牛为胜者）</p>
<h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><p>第1行: 输出1个整数，表示排名可以确定的奶牛的数目</p>
<h2 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h2><p>5 5<br>4 3<br>4 2<br>3 2<br>1 2<br>2 5</p>
<h2 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h2><p>2</p>
<h2 id="提示-1"><a href="#提示-1" class="headerlink" title="提示"></a>提示</h2><p>【输出说明】 编号为2的奶牛输给了编号为1、3、4的奶牛，也就是说她的水平比这3头奶 牛都差。而编号为5的奶牛又输在了她的手下，也就是说，她的水平比编号为5的 奶牛强一些。于是，编号为2的奶牛的排名必然为第4，编号为5的奶牛的水平必 然最差。其他3头奶牛的排名仍无法确定。</p>
<h2 id="题目总结-2"><a href="#题目总结-2" class="headerlink" title="题目总结"></a>题目总结</h2><p><del>这道题我直接全做错了然后卡了10分</del><br>我的错误思路是：如果有了a,b比赛的结果，就可以判断a,b的关系，如果一个人可以和其他n-1人的关系都确定，答案数就加一<br>错误代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> win[<span class="number">101</span>][<span class="number">101</span>],n,m,a,b,ans,flag;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    freopen(<span class="string">"contest.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"contest.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        win[a][b]=win[b][a]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(win[i][j]==<span class="number">0</span>)&#123;</span><br><span class="line">                flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>)ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>正确的做法是用Floyed，用一个二维数组存储比赛结果，然后三重循环枚举k、i、j，判断i==j?，然后判断win[i][k]是否为i，win[k][j]是否为k，如果全部满足的就把win[i][j]和win[j][i]设为i，最后判断是不是和其他人都比赛过了，如果是的话就答案数增加<br>AC代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a,b,n,m,f[<span class="number">101</span>][<span class="number">101</span>],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">        f[a][b]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">              f[i][j]=f[i][j]|f[i][k]&amp;f[k][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> gg=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        <span class="keyword">if</span>(i==j)<span class="keyword">continue</span>;<span class="keyword">else</span> </span><br><span class="line">         gg=gg&amp;(f[i][j]|f[j][i]);</span><br><span class="line">         ans+=gg;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D-Cowrun"><a href="#D-Cowrun" class="headerlink" title="D.Cowrun"></a>D.Cowrun</h1><h2 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h2><p>奶牛们打算通过锻炼来培养自己的运动细胞，作为其中的一员，贝茜选择的运动方式是每天进行N(1 &lt;= N &lt;= 10,000)分钟的晨跑。在每分钟的开始，贝茜会选择下一分钟是用来跑步还是休息。<br>    贝茜的体力限制了她跑步的距离。更具体地，如果贝茜选择在第i分钟内跑步，她可以在这一分钟内跑D_i(1 &lt;= D_i &lt;= 1,000)米，并且她的疲劳度会增加1。不过，无论何时贝茜的疲劳度都不能超过M(1 &lt;= M &lt;= 500)。如果贝茜选择休息，那么她的疲劳度就会每分钟减少1，但她必须休息到疲劳度恢复到0为止。在疲劳度为0时休息的话，疲劳度不会再变动。晨跑开始时，贝茜的疲劳度为0。<br>    还有，在N分钟的锻炼结束时，贝茜的疲劳度也必须恢复到0，否则她将没有足够的精力来对付这一整天中剩下的事情。<br>    请你计算一下，贝茜最多能跑多少米。</p>
<h2 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h2><p>第1行: 2个用空格隔开的整数：N 和 M<br>第2..N+1行: 第i+1为1个整数：D_i</p>
<h2 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h2><p>第1行: 输出1个整数，表示在满足所有限制条件的情况下，贝茜能跑的最大距离</p>
<h2 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h2><p>5 2<br>5<br>3<br>4<br>2<br>10</p>
<h2 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h2><p>9</p>
<h2 id="提示-2"><a href="#提示-2" class="headerlink" title="提示"></a>提示</h2><p>【输出说明】 贝茜在第1分钟内选择跑步（跑了5米），在第2分钟内休息，在第3分钟内跑 步（跑了4米），剩余的时间都用来休息。因为在晨跑结束时贝茜的疲劳度必须 为0，所以她不能在第5分钟内选择跑步。</p>
<h2 id="题目总结-3"><a href="#题目总结-3" class="headerlink" title="题目总结"></a>题目总结</h2><p><del>这道题我根本就没看懂</del><br>AC代码:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 11111</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXM 555</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000000007</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dp[MAXN][MAXM];</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dp[i][<span class="number">0</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i &gt;= j) dp[i][<span class="number">0</span>] = max(dp[i][<span class="number">0</span>], dp[i - j][j]);</span><br><span class="line">            dp[i][j] = max(dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i], dp[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[n][<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
</search>
